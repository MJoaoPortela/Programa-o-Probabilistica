# Ficha 4


~~~~
//codigo ex do prof
var prop = {"ps":36.34,"psd":27.76,"cdu":6.33,"cds":4.22, "be":9.52,
  "pan":3.32,"chega":1.29,"il":1.29, "livre":1.09, "indecisos":8.84}
var pares = _.toPairs(prop)
print(pares)
var tuplo = _.unzip(pares)
var partidos = tuplo[0]
var percentagens = tuplo[1]
print(partidos)
print(percentagens)
var dic = _.fromPairs(_.zip("partidos percentagens".split(" "), tuplo))
print(dic)
print(dic.partidos)
print(dic.percentagens)
~~~~

###Exercicio 1

~~~~
var pessoa = 1000;
var sondagens = function (pessoas) {
  var perc = {"ps":36.34,"psd":27.76,"cdu":6.33,"cds":4.22, "be":9.52,
  "pan":3.32,"chega":1.29,"il":1.29, "livre":1.09, "indecisos":8.84}
  var per = _.values(perc)
  var percent = map(function (x){x/100}, per)
  var sond = multinomial({ps:percent,n:pessoas})
  var dic =_.fromPairs(_.zip(_.keys(perc), sond))
  return dic
}

sondagens(pessoa)
~~~~

### Exercicio 2


~~~~
var pessoa = 1000;

var sondagens = function (pessoas) {
  var perc = {"ps":36.34,"psd":27.76,"cdu":6.33,"cds":4.22, "be":9.52,
  "pan":3.32,"chega":1.29,"il":1.29, "livre":1.09, "indecisos":8.84}
  var per = _.values(perc)
  var percent = map(function (x){x/100}, per)
  var sond = multinomial({ps:percent,n:pessoas})
  var dic =_.fromPairs(_.zip(_.keys(perc), sond))
  return dic
}

var s = sondagens (pessoa)

var modelo = function () {
  var percent = mapN(function (){uniform(0,1)}, 10)
  var per = map(function (x){x/(sum(percent))}, percent)
  var dist = Multinomial({ps:per,n:pessoa})
  observe (dist, _.values(s))
  var dici =_.fromPairs(_.zip(_.keys(s), per))
  return dici
}
~~~~

### Exercicio 3

~~~~
var pessoa = 1000;
var sondagens = function (pessoas) {
  var perc = {"ps":36.34,"psd":27.76,"cdu":6.33,"cds":4.22, "be":9.52,
  "pan":3.32,"chega":1.29,"il":1.29, "livre":1.09, "indecisos":8.84}
  var per = _.values(perc) //lista com os valores do elementos de perc; a prob de cada partido
  var percent = map(function (x){x/100}, per) //é só passar para percentagem
  var sond = multinomial({ps:percent,n:pessoas})
  var dic =_.fromPairs(_.zip(_.keys(perc), sond))
  return dic
}

var s = sondagens (pessoa)

var modelo = function () {
  var percent = mapN(function (){uniform(0,1)}, 10)
  var per = map(function (x){x/(sum(percent))}, percent)
  var dist = Multinomial({ps:per,n:pessoa})
  observe (dist, _.values(s))
  var dici =_.fromPairs(_.zip(_.keys(s), per))
  //print(_(dici))
  return dici
}

viz.marginals(Infer(modelo))
~~~~

### Exercicio 4


~~~~
var pessoa = 1000;
var sondagens = function (pessoas) {
  var perc = {"ps":36.34,"psd":27.76,"cdu":6.33,"cds":4.22, "be":9.52,
  "pan":3.32,"chega":1.29,"il":1.29, "livre":1.09, "indecisos":8.84}
  var per = _.values(perc) //lista com os valores do elementos de perc; a prob de cada partido
  var percent = map(function (x){x/100}, per) //é só passar para percentagem
  var sond = multinomial({ps:percent,n:pessoas})
  var dic =_.fromPairs(_.zip(_.keys(perc), sond)) //zip dos valores e keys; atribuiçao das keys
  return dic
}

var s = sondagens (pessoa)

var modelo = function () {
  var percent = mapN(function (){uniform(0,1)}, 10)
  var per = map(function (x){x/(sum(percent))}, percent)
  var dist = Multinomial({ps:per,n:pessoa})
  observe (dist, _.values(s))
  var dici =_.fromPairs(_.zip(_.keys(s), per))
  return dici
}

var estimar_intervalo = function(dist, margem, low, high) {
  expectation(marginalize(dist, margem), function(p) {low < p && p < high})
}

var HDI = function(dist, margem, low, high, delta) {
  var p = estimar_intervalo(dist, margem, low, high)
  if (p <= 0.95) return [low, high]
  var A  = estimar_intervalo(dist, margem, low + delta, high)
  var B  = estimar_intervalo(dist, margem, low, high - delta)
  return A > B ? HDI(dist, margem, low + delta, high, delta) 
  : HDI(dist, margem, low, high - delta, delta)
}

var print_intervals = function(dist, margens) {
  map(function(m) {
    print(m + ": " + HDI(dist, m, 0, 1, 0.005))
  }, margens)
  
}
var dist = Infer(modelo)
viz.marginals(dist)
var dummy = print_intervals(dist, ["ps","psd","cdu","cds","be","pan","chega","il",
                                   "livre", "indecisos"])
~~~~